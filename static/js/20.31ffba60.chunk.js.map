{"version":3,"file":"static/js/20.31ffba60.chunk.js","mappings":"+NAIaA,EAAQC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2IAIHC,GAIfC,EAAaJ,EAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yEAMtBI,EAAON,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8HAQhBM,GAAaR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yGAOzBS,EAAWX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wS,SC9BlB,SAASW,EAAUC,GAAoB,IAAjBC,EAAMD,EAANC,OAAQC,EAAIF,EAAJE,KACnCC,GAAWC,EAAAA,EAAAA,MAGjB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKN,IACGI,EAAAA,EAAAA,KAACb,EAAI,CAAAe,SACAN,EAAOO,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAIC,EAAWH,EAAXG,YAAW,OACjCC,EAAAA,EAAAA,MAAChB,EAAQ,CAAAU,SAAA,EACLF,EAAAA,EAAAA,KAACX,EAAU,CAACoB,GAAE,GAAAC,OAAKb,GAAIa,OAAGJ,GAAMK,MAAO,CAACC,KAAMd,GAAWI,UACrDF,EAAAA,EAAAA,KAACpB,EAAK,CAACiC,IAAG,kCAAAH,OAAoCH,GAAeO,IAAI,QAErEd,EAAAA,EAAAA,KAACX,EAAU,CAACoB,GAAE,GAAAC,OAAKb,GAAIa,OAAGJ,GAAMK,MAAO,CAAEC,KAAMd,GAAWI,UAACF,EAAAA,EAAAA,KAACf,EAAU,CAAAiB,SAAEG,QAJ7DC,EAKJ,OAMnC,C,mGCrBaS,E,OAAQlC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sD,kBCEf,SAASiC,IACpB,IAAAC,GAA4CC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAA8BL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAkB1B,OAhBAG,EAAAA,EAAAA,YAAU,WACNC,MAAM,2GACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACPA,EAASI,SACVR,EAAWI,EAASK,gBAExBb,EAAkBQ,EAASM,QAC/B,IACCC,OAAM,SAAAC,GACHN,QAAQC,IAAIK,GACZZ,EAAWY,EACf,GACR,GAAG,KAGC9B,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAACe,EAAK,CAAAb,SAAC,mBACNmB,IAAkBrB,EAAAA,EAAAA,KAACN,EAAAA,EAAU,CAACG,KAAI,UAAaD,OAAQyB,IACvDI,IAAWzB,EAAAA,EAAAA,KAACe,EAAK,CAAAb,SAAC,qCAG/B,CC7Be,SAASqC,IACpB,OACIvC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACgB,EAAc,KAG3B,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/TrendingMovies/TrendingMovies.styled.jsx","components/TrendingMovies/TrendingMovies.jsx","pages/Home.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport noImage from '../../images/no-image.jpg';\n\nexport const Image = styled.img`\n    display: block;\n    min-width: 200px;\n    min-height: 300px;\n    background-image: url(${noImage});\n    background-size: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n    text-align: center;\n    margin: 0px;\n    padding: 16px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin: -15px; \n    list-style: none;\n`;\n\nexport const StyledLink = styled(Link)`\n    color: #190530;\n    font-size: 15px;\n    text-decoration: none;\n    line-height: 25px;\n`;\n\nexport const FilmCard = styled.li`\n    display: flex;\n    margin: 15px;\n    flex-direction: column;\n    flex-basis: 200px;\n    border-radius: 10px;\n    overflow: hidden;\n    transition-duration: 300ms;\n    &:hover {\n        transform: scale(1.05);\n        box-shadow: 0px 1px 6px 0px rgba(25,5,48,0.28);\n    }\n`;","import { useLocation } from \"react-router-dom\";\nimport { FilmCard, List, StyledLink, MovieTitle, Image } from \"./MoviesList.styled\";\n\nexport default function MoviesList({ movies, path }) {\n    const location = useLocation();\n\n    // console.log(location);\n    return (\n        <>\n            {movies &&\n                <List>\n                    {movies.map(({ title, id, poster_path }) => (\n                        <FilmCard key={id}>\n                            <StyledLink to={`${path}${id}`} state={{from: location }}>\n                                <Image src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt=\"\" />\n                            </StyledLink>\n                            <StyledLink to={`${path}${id}`} state={{ from: location }}><MovieTitle>{title}</MovieTitle></StyledLink>\n                        </FilmCard>\n                    ))}\n                </List>\n            }\n        </>\n    );\n}","import { styled } from \"styled-components\"; \n\nexport const Title = styled.h1`\n    color: #190530;\n    font-weight: 400;\n`;","import { useEffect, useState } from \"react\";\nimport { Title } from \"./TrendingMovies.styled\";\nimport MoviesList from \"components/MoviesList\";\n\nexport default function TrendingMovies() {\n    const [trendingMovies, setTrendingMovies] = useState();\n    const [isError, setIsError] = useState();\n\n    useEffect(() => {\n        fetch('https://api.themoviedb.org/3/trending/movie/day?api_key=b6e502cbaaa880d060a13b6a3192abd0&language=en-US')\n            .then(response => response.json())\n            .then(response => {\n                console.log(response);\n                if (!response.success) {\n                    setIsError(response.status_message);                   \n                }\n                setTrendingMovies(response.results);\n            })\n            .catch(err => {\n                console.log(err);\n                setIsError(err);\n            });\n    }, [])\n\n    return (\n        <>\n            <Title>Trending Today</Title>\n            {trendingMovies && <MoviesList path={`movies/`} movies={trendingMovies} />}\n            {isError && <Title>Sorry, something went wrong...</Title>}\n        </>\n    );\n}","import TrendingMovies from '../components/TrendingMovies'\n\nexport default function Home() {\n    return (\n        <>\n            <TrendingMovies /> \n        </>\n    );\n}"],"names":["Image","styled","_templateObject","_taggedTemplateLiteral","noImage","MovieTitle","_templateObject2","List","_templateObject3","StyledLink","Link","_templateObject4","FilmCard","_templateObject5","MoviesList","_ref","movies","path","location","useLocation","_jsx","_Fragment","children","map","_ref2","title","id","poster_path","_jsxs","to","concat","state","from","src","alt","Title","TrendingMovies","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","isError","setIsError","useEffect","fetch","then","response","json","console","log","success","status_message","results","catch","err","Home"],"sourceRoot":""}