{"version":3,"file":"static/js/871.1d794a41.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MovieFinder/MovieFinder.styled.jsx","components/MovieFinder/MovieFinder.jsx","pages/Movies.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport noImage from '../../images/no-image.jpg';\n\nexport const Image = styled.img`\n    display: block;\n    min-width: 200px;\n    min-height: 300px;\n    background-image: url(${noImage});\n    background-size: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n    text-align: center;\n    margin: 0px;\n    padding: 16px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin: -15px; \n    list-style: none;\n`;\n\nexport const StyledLink = styled(Link)`\n    color: #190530;\n    font-size: 15px;\n    text-decoration: none;\n    line-height: 25px;\n`;\n\nexport const FilmCard = styled.li`\n    display: flex;\n    margin: 15px;\n    flex-direction: column;\n    flex-basis: 200px;\n    border-radius: 10px;\n    overflow: hidden;\n    transition-duration: 300ms;\n    &:hover {\n        transform: scale(1.05);\n        box-shadow: 0px 1px 6px 0px rgba(25,5,48,0.28);\n    }\n`;","import { useLocation } from \"react-router-dom\";\nimport { FilmCard, List, StyledLink, MovieTitle, Image } from \"./MoviesList.styled\";\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ movies, path }) {\n    const location = useLocation();\n\n    return (\n        <>\n            {movies &&\n                <List>\n                    {movies.map(({ title, id, poster_path }) => (\n                        <FilmCard key={id}>\n                            <StyledLink to={`${path}${id}`} state={{from: location }}>\n                                <Image src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt=\"\" />\n                            </StyledLink>\n                            <StyledLink to={`${path}${id}`} state={{ from: location }}><MovieTitle>{title}</MovieTitle></StyledLink>\n                        </FilmCard>\n                    ))}\n                </List>\n            }\n        </>\n    );\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.array.isRequired,\n    path: PropTypes.string.isRequired\n};","import styled from \"styled-components\";\n\nexport const SearchButton = styled.button`\n    display: block;\n    border-right: none;\n    background-color: #fceaff;\n    border-radius: 10px 0px 0px 10px;\n    border: none;\n    cursor: pointer;\n    svg {\n        display: block;\n        height: 30px;\n        width: 30px;\n        color: #190530;\n        &:active {\n            color: #a06cd9;\n        }\n    }\n    \n`;\n\nexport const Input = styled.input`\n    font-size: 20px;\n    color: #190530;\n    height: 40px;\n    width: 300px;\n    border-radius: 0px 10px 10px 0px;\n    border: none;\n    background-color: #fceaff;\n    &:focus-visible {\n        outline: none;\n    }\n`;\n\nexport const SearchForm = styled.form`\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n    margin-bottom: 20px;\n`;\n\nexport const BorderWrap = styled.div`\n    display: flex;\n    border: 3px solid #a06cd9;\n    border-radius: 10px;\n`;","import { useEffect, useState } from \"react\";\nimport { BorderWrap, Input, SearchButton, SearchForm } from \"./MovieFinder.styled\";\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { useSearchParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport default function MovieFinder({ setMovies }) {\n    const [movieTitle, setMovieTitle] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [query, setQuery] = useState(searchParams.get(\"query\"));\n\n    const handleInputChange = (e) => {\n        setMovieTitle(e.target.value);\n        setSearchParams({ query: e.target.value })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setQuery(movieTitle.trim());\n    }\n    useEffect(() => {\n        if (query === undefined || query === '' || query === null) {\n            return;\n        }\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=b6e502cbaaa880d060a13b6a3192abd0&query=${query}&include_adult=false&language=en-US&page=1`)\n            .then(response => response.json())\n            .then(response => {\n                setMovies(response.results);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }, [query, setMovies])\n\n\n    return (\n        <>\n            <SearchForm onSubmit={handleSubmit}>\n                <BorderWrap>\n                    <SearchButton type=\"submit\">\n                        <AiOutlineSearch />\n                    </SearchButton>\n                    <Input\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movie\"\n                        value={movieTitle}\n                        onChange={handleInputChange}\n                    />\n                </BorderWrap>\n\n            </SearchForm>\n        </>\n    );\n}\n\nMovieFinder.propTypes = {\n    setMovies: PropTypes.func.isRequired\n};","import MovieFinder from \"components/MovieFinder\";\nimport MoviesList from \"components/MoviesList\";\nimport { useState } from \"react\";\n\nexport default function Movies() {\n    const [movies, setMovies] = useState();\n\n    return (\n        <>\n            <MovieFinder setMovies={setMovies} />\n            {movies && <MoviesList path={''} movies={movies} />}\n        </>\n    );\n}"],"names":["Image","styled","_templateObject","_taggedTemplateLiteral","noImage","MovieTitle","_templateObject2","List","_templateObject3","StyledLink","Link","_templateObject4","FilmCard","_templateObject5","MoviesList","_ref","movies","path","location","useLocation","_jsx","_Fragment","children","map","_ref2","title","id","poster_path","_jsxs","to","concat","state","from","src","alt","SearchButton","Input","SearchForm","BorderWrap","MovieFinder","setMovies","_useState","useState","_useState2","_slicedToArray","movieTitle","setMovieTitle","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","get","_useState4","query","setQuery","useEffect","undefined","fetch","then","response","json","results","catch","err","console","log","onSubmit","e","preventDefault","trim","type","AiOutlineSearch","autoComplete","autoFocus","placeholder","value","onChange","target","Movies"],"sourceRoot":""}