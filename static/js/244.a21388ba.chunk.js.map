{"version":3,"file":"static/js/244.a21388ba.chunk.js","mappings":"8OAEaA,EAAaC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAItBC,EAASH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sMAUlBG,EAASL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sFAMjBK,EAAUP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4BAIlBO,EAAeT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wD,SCtBtB,SAASS,IACpB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAA8BC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAwCT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAoBpC,OAlBAG,EAAAA,EAAAA,YAAU,WACNC,MAAM,sCAADC,OAAuClB,EAAE,qEACzCmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GACGA,EAASE,SACVX,EAAWS,EAASG,gBAEQ,IAA5BH,EAASI,QAAQC,QACjBV,EAAgB,QAEpBR,EAAWa,EAASI,QACxB,IACCE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZhB,EAAWgB,EACf,GACR,GAAG,CAAC3B,IAEiB,SAAjBc,GAEIgB,EAAAA,EAAAA,KAACjC,EAAY,CAAAkC,SAAC,8CAIdC,EAAAA,EAAAA,MAAC7C,EAAU,CAAA4C,SAAA,CACNzB,GAAWA,EAAQ2B,KAAI,SAAAC,GAA8B,IAA3BlC,EAAEkC,EAAFlC,GAAImC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QACnC,OACIJ,EAAAA,EAAAA,MAACzC,EAAM,CAAAwC,SAAA,EACHD,EAAAA,EAAAA,KAACrC,EAAM,CAAAsC,SAAEI,KACTL,EAAAA,EAAAA,KAACnC,EAAO,CAAAoC,SAAEK,MAFDpC,EAKrB,IACCU,IAAWoB,EAAAA,EAAAA,KAACjC,EAAY,CAAAkC,SAAC,qCAI1C,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewList = styled.ul`\n    list-style: none;\n`;\n\nexport const Review = styled.li`\n    color: #190530;\n    padding: 25px 20px;\n    border-radius: 10px;\n    box-shadow: 0px 1px 6px 0px rgba(25,5,48,0.28);\n    &:not(:last-child) {\n        margin-bottom: 20px;\n    }\n`;\n\nexport const Author = styled.p`\n    margin: 0px 0px 16px 0px;\n    font-weight: 700;\n    font-size: 18px;\n`;\n\nexport const Content = styled.p`\n    margin: 0px;\n`;\n\nexport const Notification = styled.h3`\n    text-align: center;\n    color: #190530;\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Author, Review, ReviewList, Content, Notification } from \"./Reviews.styled\";\n\nexport default function Reviews() {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState();\n    const [isError, setIsError] = useState();\n    const [nothingFound, setNothingFound] = useState();\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=b6e502cbaaa880d060a13b6a3192abd0&language=en-US`)\n            .then(response => response.json())\n            .then(response => {\n                if (!response.success) {\n                    setIsError(response.status_message);\n                }\n                if (response.results.length === 0) {\n                    setNothingFound('fail');\n                }\n                setReviews(response.results);\n            })\n            .catch(err => {\n                console.log(err);\n                setIsError(err);\n            });\n    }, [id]);\n\n    if (nothingFound === 'fail') {\n        return (\n            <Notification>We don't have any reviews for this movie</Notification>\n        );\n    } else {\n        return (\n            <ReviewList>\n                {reviews && reviews.map(({ id, author, content }) => {\n                    return (\n                        <Review key={id}>\n                            <Author>{author}</Author>\n                            <Content>{content}</Content>\n                        </Review>\n                    );\n                })}\n                {isError && <Notification>Sorry, something went wrong...</Notification>}\n            </ReviewList>\n        );\n    }\n}"],"names":["ReviewList","styled","_templateObject","_taggedTemplateLiteral","Review","_templateObject2","Author","_templateObject3","Content","_templateObject4","Notification","_templateObject5","Reviews","id","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isError","setIsError","_useState5","_useState6","nothingFound","setNothingFound","useEffect","fetch","concat","then","response","json","success","status_message","results","length","catch","err","console","log","_jsx","children","_jsxs","map","_ref","author","content"],"sourceRoot":""}